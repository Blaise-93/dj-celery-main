version: '3'

services:
  db:
    image: dj_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}

    volumes:
      - db-data: /var/lib/postgresql/data
    env_file:
      - ./.env

  redis:
    image:  redis:alpine
    volumes:
      - redis-data:/data

  celery: 
    build: .
    command: celery -A dj_celery worker -l info
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=dj_celery.production_settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_URL=${REDIS_URL}
    env_file:
      - ./.env

  celery-beat:
    build: .
    command: celery beat -A dj_celery worker -loglevel=info
    depends_on:
      - db
      - redis
    
    environment: 
      - DJANGO_SETTINGS_MODULE=dj_celery.production_settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_URL=${REDIS_URL}

    env_file:
      - ./.env
    
  channels:
    build: .
    command: daphne -b 0.0.0.0 -p 8001 dj_celery.asgi:application
    depends_on:
      - db
      - redis

    environment: 
      - DJANGO_SETTINGS_MODULE=dj_celery.production_settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_URL=${REDIS_URL}

    env_file:
      - ./.env
    
    # Nginx docker config
  
  nginx:
    image: nginx:latest
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    
    depends_on:
      - channels

    env_file:
      - ./.env

  volumes:
    db-data:
    redis-data:
        




